openapi: 3.0.0
info:
  title: MadaTrans API
  description: Tiana Finaritra RANDRIANARISOA H1 STD22023
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name: clients
    description: Operations related to clients
  - name: payments
    description: Operations related to payments
  - name: reservations
    description: Operations related to reservations
  - name: voyages
    description: Operations related to voyages

paths:
  /clients:
    post:
      summary: Add a client
      operationId: addClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInput'
      responses:
        '201':
          description: Client added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '500':
          description: Internal server error
    get:
      summary: Get all clients
      operationId: getAllClients
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '500':
          description: Internal server error

  '/clients/{clientId}':
    get:
      summary: Get a client by ID
      operationId: getClientById
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: integer
          description: Client ID
      responses:
        '200':
          description: Client found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Client not found
        '500':
          description: Internal server error

    # Other CRUD methods for clients

  /payments:
    post:
      summary: Add a payment
      operationId: addPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInput'
      responses:
        '201':
          description: Payment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '500':
          description: Internal server error
    get:
      summary: Get all payments
      operationId: getAllPayments
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '500':
          description: Internal server error

  '/payments/{paymentId}':
    get:
      summary: Get a payment by ID
      operationId: getPaymentById
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: integer
          description: Payment ID
      responses:
        '200':
          description: Payment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
        '500':
          description: Internal server error

    # Other CRUD methods for payments

  
  /reservations:
    post:
      summary: Add a reservation
      operationId: addReservation
      tags:
        - reservations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationInput'
      responses:
        '201':
          description: Reservation added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '500':
          description: Internal server error
    get:
      summary: Get all reservations
      operationId: getAllReservations
      tags:
        - reservations
      responses:
        '200':
          description: List of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '500':
          description: Internal server error

  '/reservations/{reservationId}':
    get:
      summary: Get a reservation by ID
      operationId: getReservationById
      tags:
        - reservations
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
          description: Reservation ID
      responses:
        '200':
          description: Reservation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: Reservation not found
        '500':
          description: Internal server error
    put:
      summary: Update a reservation by ID
      operationId: updateReservation
      tags:
        - reservations
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
          description: Reservation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationInput'
      responses:
        '200':
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: Reservation not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a reservation by ID
      operationId: deleteReservation
      tags:
        - reservations
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
          description: Reservation ID
      responses:
        '204':
          description: Reservation deleted successfully
        '404':
          description: Reservation not found
        '500':
          description: Internal server error

  # Add paths for reservations and voyages here

components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string

    Payment:
      type: object
      properties:
        id:
          type: integer
        reservationId:
          type: integer
        paymentDate:
          type: string
          format: date-time
        amount:
          type: number
        paymentStatus:
          type: string

    Reservation:
      type: object
      properties:
        id:
          type: integer
        reservationDate:
          type: string
          format: date-time
        clientId:
          type: integer
        voyageId:
          type: integer

    Voyage:
      type: object
      properties:
        id:
          type: integer
        destination:
          type: string
        departureDate:
          type: string
          format: date-time
        availableSeats:
          type: integer
        fare:
          type: number

    ClientInput:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string

    PaymentInput:
      type: object
      properties:
        reservationId:
          type: integer
        paymentDate:
          type: string
          format: date-time
        amount:
          type: number
        paymentStatus:
          type: string

    ReservationInput:
      type: object
      properties:
        reservationDate:
          type: string
          format: date-time
        clientId:
          type: integer
        voyageId:
          type: integer

    VoyageInput:
      type: object
      properties:
        destination:
          type: string
        departureDate:
          type: string
          format: date-time
        availableSeats:
          type: integer
        fare:
          type: number
